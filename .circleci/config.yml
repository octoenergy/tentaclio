---
# Python CircleCI 2.0 configuration file
#
# INFO: Check CircleCI documentation for more details
#       https://circleci.com/docs/2.0/language-python/

version: 2.1

executors:
  standard:
    docker:
      - image: circleci/python:3.9
        environment:
          PIPENV_VENV_IN_PROJECT: true
    working_directory: "~/lib"

# -----------------
# Reusable commands
# -----------------

commands:
  configure_github:
    steps:
      - run:
          name: Configure Github access
          command: |
            git config --global --unset url.ssh://git@github.com.insteadof;\
            echo https://${GITHUB_TOKEN}:@github.com > ~/.git-credentials
            git config --global credential.helper store

  checkout_source:
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-
      - checkout
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - "./.git"

  update_virtualenv:
    steps:
      - restore_cache:
          keys:
            - virtualenv-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - virtualenv-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-
            - virtualenv-{{ .Environment.CACHE_VERSION }}-
      - configure_github
      - run:
          name: Install Python packages
          command: make sync
      - save_cache:
          key: virtualenv-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "./.venv"

jobs:
  lint:
    executor: standard
    steps:
      - checkout_source
      - update_virtualenv
      - run:
          name: Run Python linter
          command: make lint

  unit:
    executor: standard
    steps:
      - checkout_source
      - update_virtualenv
      - run:
          name: Run Python unit tests
          command: make unit

  release:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.9

    steps:
      - checkout_source
      - update_virtualenv
      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-
            - pip-cache-{{ .Environment.CACHE_VERSION }}-

      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = octoenergy" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create release
          command: |
            make release


  functional-ftp:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.9
        environment:
          TENTACLIO__CONN__FTP_TEST: ftp://octopus:tentacle@localhost

      - image: mauler/simple-ftp-server
        environment:
          FTP_USER: octopus
          FTP_PASS: tentacle

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Python packages
          command: make sync


  functional-sftp:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.9
        environment:
          TENTACLIO__CONN__SFTP_TEST: sftp://octopus:tentacle@localhost:22

      - image: atmoz/sftp
        command: octopus:tentacle:::upload

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Python packages
          command: make sync

      - run:
          name: Run sftp functional tests
          command: make functional-sftp


workflows:
  version: 2

  test-build-deploy:
    jobs:
      - lint:
        filters:
          tags:
            only: /.*/

      - unit:
          filters:
            tags:
              only: /.*/
      - functional-ftp:
          filters:
            tags:
              only: /.*/
          requires:
            - lint
            - unit
      - functional-sftp:
          filters:
            tags:
              only: /.*/
          requires:
            - lint
            - unit
      - release:
          requires:
            - functional-ftp
            - functional-sftp
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*(-alpha\.[0-9]+)?/
            branches:
              ignore: /.*/
          context: TENTACLIO
