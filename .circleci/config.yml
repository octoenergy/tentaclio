---
# Python CircleCI 2.0 configuration file
#
# INFO: Check CircleCI documentation for more details
#       https://circleci.com/docs/2.0/language-python/

version: 2.1


jobs:
  lint:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.7

    steps:
      - checkout

      - restore_cache:
          # Increasingly general patterns to restore
          # https://circleci.com/docs/2.0/caching/#using-keys-and-templates
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-
            - pip-cache-{{ .Environment.CACHE_VERSION }}-

      - run:
          name: Install Python packages
          command: make sync

      - save_cache:
          # Pipenv venv and pip cached wheels
          paths:
            - "~/.local"
            - "~/.cache"
          key: pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Run linters
          command: make lint


  unit:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.7

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-
            - pip-cache-{{ .Environment.CACHE_VERSION }}-

      - run:
          name: Install Python packages
          command: make sync

      - save_cache:
          paths:
            - "~/.local"
            - "~/.cache"
          key: pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Run unit tests
          command: make unit

  release:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.7

    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-
            - pip-cache-{{ .Environment.CACHE_VERSION }}-

      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = octoenergy" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create release
          command: |
            make release

  functional-s3:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.7
        environment:
          TENTACLIO__CONN__S3_TEST: s3://public_key:private_key@tentaclio-bucket

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Python packages
          command: make sync

      - run:
          name: Run S3 functional tests
          command: make functional-s3


  functional-ftp:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.7
        environment:
          TENTACLIO__CONN__FTP_TEST: ftp://octopus:tentacle@localhost

      - image: mauler/simple-ftp-server
        environment:
          FTP_USER: octopus
          FTP_PASS: tentacle

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Python packages
          command: make sync

      - run:
          name: Run postgres functional tests
          command: make functional-ftp


  functional-sftp:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.7
        environment:
          TENTACLIO__CONN__SFTP_TEST: sftp://octopus:tentacle@localhost:22

      - image: atmoz/sftp
        command: octopus:tentacle:::upload

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Python packages
          command: make sync

      - run:
          name: Run sftp functional tests
          command: make functional-sftp


  functional-postgres:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.7
        environment:
          TENTACLIO__CONN__POSTGRES_TEST: postgresql://:@localhost:5432/tentaclio-db

      - image: circleci/postgres:9.5.10
        environment:
          # CircleCI img run under `circleci` user
          POSTGRES_USER: circleci
          POSTGRES_DB: tentaclio-db

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Python packages
          command: make sync

      - run:
          name: Run postgres functional tests
          command: make functional-postgres


workflows:
  version: 2

  test-build-deploy:
    jobs:
      - lint:
        filters:
          tags:
            only: /.*/

      - unit:
          filters:
            tags:
              only: /.*/
      - functional-s3:
          filters:
            tags:
              only: /.*/
          requires:
            - lint
            - unit
      - functional-ftp:
          filters:
            tags:
              only: /.*/
          requires:
            - lint
            - unit
      - functional-sftp:
          filters:
            tags:
              only: /.*/
          requires:
            - lint
            - unit
      - functional-postgres:
          filters:
            tags:
              only: /.*/
          requires:
            - lint
            - unit
      - release:
          requires:
            - functional-s3
            - functional-ftp
            - functional-sftp
            - functional-postgres
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*(-alpha\.[0-9]+)?/
            branches:
              ignore: /.*/
          context: TENTACLIO
