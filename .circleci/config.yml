# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details

version: 2.0

jobs:

  build:

    working_directory: ~/lib

    docker:
      - image: circleci/python:3.6.6
        environment:
          POSTGRES_TEST_URL: postgresql://:@localhost:5432/dataio-test
      - image: circleci/postgres:9.5.10
        environment:
          # CircleCI img run under `circleci` user
          POSTGRES_USER: circleci
          POSTGRES_DB: dataio-test

    steps:
      - checkout
      - restore_cache:
          # Increasingly general patterns to restore
          # https://circleci.com/docs/2.0/caching/#using-keys-and-templates
          keys:
            - pip-cache-{{ .Environment.PIP_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-cache-{{ .Environment.PIP_CACHE_VERSION }}-{{ .Branch }}-
            - pip-cache-{{ .Environment.PIP_CACHE_VERSION }}-
      - run:
          name: Install Python packages
          command: make sync
      - save_cache:
          # Pipenv venv and pip cached wheels
          paths:
            - "~/.local"
            - "~/.cache"
          key: pip-cache-{{ .Environment.PIP_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Run linters and tests
          command: make circleci


  functional-ftp:

    working_directory: ~/lib

    docker:
      - image: circleci/python:3.6.6
        environment:
            OCTOIO_CONN_FTP_TEST: ftp://octopus:tentacle@localhost/

      - image: mauler/simple-ftp-server
        environment:
          FTP_USER: octopus
          FTP_PASS: tentacle 

    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.PIP_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Run postgres functional tests 
          command: make functional-ftp

  functional-sftp:

    working_directory: ~/lib

    docker:
      - image: circleci/python:3.6.6
        environment:
            OCTOIO_CONN_SFTP_TEST: ftp://octopus:tentacle@localhost:2222/

      - image: atmoz/sftp
        command: octopus:tentacle:::upload

    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.PIP_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Run sftp functional tests 
          command: make functional-sftp
workflows:

  version: 2

  test-build:
    jobs:
        - build
        - functional-sftp:
            requires:
                - build
        - functional-ftp:
            requires:
                - build
