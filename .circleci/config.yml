# Python CircleCI 2.0 configuration file
#
# INFO: Check CircleCI documentation for more details
#       https://circleci.com/docs/2.0/language-python/

version: 2.0

jobs:

  lint:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.6.6

    steps:
      - checkout

      - restore_cache:
          # Increasingly general patterns to restore
          # https://circleci.com/docs/2.0/caching/#using-keys-and-templates
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-
            - pip-cache-{{ .Environment.CACHE_VERSION }}-

      - run:
          name: Install Python packages
          command: make sync

      - save_cache:
          # Pipenv venv and pip cached wheels
          paths:
            - "~/.local"
            - "~/.cache"
          key: pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Run linters
          command: make lint

  unit:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.6.6

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-
            - pip-cache-{{ .Environment.CACHE_VERSION }}-

      - run:
          name: Install Python packages
          command: make sync

      - save_cache:
          paths:
            - "~/.local"
            - "~/.cache"
          key: pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Run unit tests
          command: make unit

      - store_test_results:
          path: /tmp/results/

  integration:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.6.6

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-
            - pip-cache-{{ .Environment.CACHE_VERSION }}-

      - run:
          name: Install Python packages
          command: make sync

      - save_cache:
          paths:
            - "~/.local"
            - "~/.cache"
          key: pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Run integration tests
          command: make integration

      - store_test_results:
          path: /tmp/results/

  functional-ftp:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.6.6
        environment:
            OCTOIO__CONN__FTP_TEST: ftp://octopus:tentacle@localhost/

      - image: mauler/simple-ftp-server
        environment:
          FTP_USER: octopus
          FTP_PASS: tentacle 

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Run postgres functional tests 
          command: make functional-ftp

  functional-sftp:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.6.6
        environment:
            OCTOIO__CONN__SFTP_TEST: sftp://octopus:tentacle@localhost:22/

      - image: atmoz/sftp
        command: octopus:tentacle:::upload

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Run sftp functional tests 
          command: make functional-sftp

  functional-postgres:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.6.6
        environment:
          OCTOIO__CONN__POSTGRES_TEST: postgresql://:@localhost:5432/dataio-test

      - image: circleci/postgres:9.5.10
        environment:
          # CircleCI img run under `circleci` user
          POSTGRES_USER: circleci
          POSTGRES_DB: dataio-test

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Run postgres functional tests
          command: make functional-postgres

  deploy:
    working_directory: ~/lib

    docker:
      - image: circleci/python:3.6.6

    steps:
      - checkout

      - restore_cache:
          keys:
           - pip-cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Build wheel
          command: make package

      - store_artifacts:
          path: dist
          destination: wheel

workflows:

  version: 2

  test-build-deploy:
    jobs:
        - lint
        - unit
        - integration
        - functional-ftp:
            requires:
                - lint
                - unit
                - integration
        - functional-sftp:
            requires:
                - lint
                - unit
                - integration
        - functional-postgres:
            requires:
                - lint
                - unit
                - integration
        - deploy:
            requires:
              - functional-ftp
              - functional-sftp
              - functional-postgres
            filters:
              branches:
                # Change this to the branch you want to deploy into test
                only: master
